// Code generated by go-swagger; DO NOT EDIT.

package k8_ipam_agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new k8 ipam agent API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for k8 ipam agent API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteIpam(params *DeleteIpamParams, opts ...ClientOption) (*DeleteIpamOK, error)

	PostIpam(params *PostIpamParams, opts ...ClientOption) (*PostIpamOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
DeleteIpam deletes ip from k8 ipam

Send a request to k8-ipam to delete an ip
*/
func (a *Client) DeleteIpam(params *DeleteIpamParams, opts ...ClientOption) (*DeleteIpamOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteIpamParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteIpam",
		Method:             "DELETE",
		PathPattern:        "/ipam",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteIpamReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteIpamOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteIpam: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostIpam allocs ip from k8 ipam

Send a request to k8-ipam to alloc an ip
*/
func (a *Client) PostIpam(params *PostIpamParams, opts ...ClientOption) (*PostIpamOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostIpamParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostIpam",
		Method:             "POST",
		PathPattern:        "/ipam",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostIpamReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostIpamOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostIpam: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
