// Code generated by go-swagger; DO NOT EDIT.

package ipamwrapper_agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Inspur-Data/ipamwrapper/api/v1/models"
)


// PostIpamReader is a Reader for the PostIpam structure.
type PostIpamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIpamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIpamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostIpamFailure()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostIpamOK creates a PostIpamOK with default headers values
func NewPostIpamOK() *PostIpamOK {
	return &PostIpamOK{}
}

/*
PostIpamOK describes a response with status code 200, with default header values.

Success
*/
type PostIpamOK struct {
	Payload *models.IpamAllocResponse
}

// IsSuccess returns true when this post ipam o k response has a 2xx status code
func (o *PostIpamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post ipam o k response has a 3xx status code
func (o *PostIpamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam o k response has a 4xx status code
func (o *PostIpamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam o k response has a 5xx status code
func (o *PostIpamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post ipam o k response a status code equal to that given
func (o *PostIpamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post ipam o k response
func (o *PostIpamOK) Code() int {
	return 200
}

func (o *PostIpamOK) Error() string {
	return fmt.Sprintf("[POST /ipam][%d] postIpamOK  %+v", 200, o.Payload)
}

func (o *PostIpamOK) String() string {
	return fmt.Sprintf("[POST /ipam][%d] postIpamOK  %+v", 200, o.Payload)
}

func (o *PostIpamOK) GetPayload() *models.IpamAllocResponse {
	return o.Payload
}

func (o *PostIpamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpamAllocResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIpamFailure creates a PostIpamFailure with default headers values
func NewPostIpamFailure() *PostIpamFailure {
	return &PostIpamFailure{}
}

/*
PostIpamFailure describes a response with status code 500, with default header values.

Allocation failure
*/
type PostIpamFailure struct {
	Payload models.Error
}

// IsSuccess returns true when this post ipam failure response has a 2xx status code
func (o *PostIpamFailure) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ipam failure response has a 3xx status code
func (o *PostIpamFailure) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam failure response has a 4xx status code
func (o *PostIpamFailure) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam failure response has a 5xx status code
func (o *PostIpamFailure) IsServerError() bool {
	return true
}

// IsCode returns true when this post ipam failure response a status code equal to that given
func (o *PostIpamFailure) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post ipam failure response
func (o *PostIpamFailure) Code() int {
	return 500
}

func (o *PostIpamFailure) Error() string {
	return fmt.Sprintf("[POST /ipam][%d] postIpamFailure  %+v", 500, o.Payload)
}

func (o *PostIpamFailure) String() string {
	return fmt.Sprintf("[POST /ipam][%d] postIpamFailure  %+v", 500, o.Payload)
}

func (o *PostIpamFailure) GetPayload() models.Error {
	return o.Payload
}

func (o *PostIpamFailure) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
